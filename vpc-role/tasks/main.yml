---

- name: create VPC
  ec2_vpc_net:
    name: "{{ vpc_name }}"
    cidr_block: "{{ vpc_cidr }}"
    region: "{{ region }}"
    state: present
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
  register: vpc
  
- name: set VPC id in variable
  set_fact:
    vpc_id: "{{ vpc.vpc.id }}"
    
- name: associate subnet to the VPC
  ec2_vpc_subnet:
    vpc_id: "{{ vpc_id }}"
    region: "{{ region }}"
    cidr: "{{ subnet_cidr }}"
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    state: present
    map_public: yes
    resource_tags:
      Name: "{{ subnet_name }}"
  register: subnet
  
- name: create IGW
  ec2_vpc_igw:
    vpc_id: "{{ vpc_id }}"
    region: "{{ region }}"
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    state: present
    tags:
      Name: "{{ igw_name }}"
  register: igw
  
- name: route IGW
  ec2_vpc_route_table:
    vpc_id: "{{ vpc_id }}"
    region: "{{ region }}"
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}" 
    subnets:
      - "{{ subnet.subnet.id }}"
    routes:
      - dest: 0.0.0.0/0
        gateway_id: "{{ igw.gateway_id }}"
    tags:
      Name: "{{ route_name }}"
      
- name: create a security group
  ec2_group:
    name: Web DMZ
    description: DMZ Security Group
    vpc_id: "{{ vpc_id }}"
    region: "{{ region }}"
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    rules:
      - proto: tcp
        ports:
          - 80
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        ports:
          - 22
        cidr_ip: 0.0.0.0/0
  register: security_group
  
- name: create a new ec2 key pair and returns generated private key
  ec2_key:
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    name: "{{ keypair_name }}"
    region: "{{ region }}"
  register: keypair
  tags:
    - production-key
    
- name: copy ec2 key pair private key locally
  copy: content="{{ keypair.key.private_key }}" dest={{ ec2_key_directory }}production.pem
  when: keypair.changed == true
  tags:
    - production-key
    
- name: create ec2 instance
  ec2:
    image: ami-0dc5785603ad4ff54
    wait: yes
    instance_type: t2.micro
    region: "{{ region }}"
    group_id: "{{ security_group.group_id }}"
    vpc_subnet_id: "{{ subnet.subnet.id }}"
    key_name: "{{ keypair.key.name }}"
    instance_tags:
      Name: Production
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
